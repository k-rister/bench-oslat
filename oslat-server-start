#!/bin/bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash

exec >oslat-server-start.txt
exec 2>&1

. /usr/bin/oslat-base || (echo "/usr/bin/oslat-base not found"; exit 1)

STRESS_NG_TILES_PER_CPU=1

opts=$(getopt -q -o "" --longoptions "stress-ng-tiles-per-cpu:" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
    printf -- "\tUnrecognized option specified\n\n"
    exit 1
fi
eval set -- "$opts";
while true; do
    case "$1" in
	--stress-ng-tiles-per-cpu)
	    shift;
	    STRESS_NG_TILES_PER_CPU=$1
	    shift;
	    ;;
        --)
            shift;
            break
            ;;
        *)
            echo "Invalid option: $1"
            exit 1
    esac
done

if [ -z "$HK_CPUS" ]; then
    TMP_CPUS=$(grep Cpus_allowed_list /proc/self/status | awk '{ print $2 }')
    echo "CPUs Allowed List: ${TMP_CPUS}"
    CPUS=""
    for sequence in $(echo ${TMP_CPUS} | sed -e 's/,/ /g'); do
        if echo $sequence | grep -q '-'; then
            start=$(echo $sequence | awk -F- '{ print $1 }')
            stop=$(echo $sequence | awk -F- '{ print $2 }')
            CPUS+=" $(seq $start 1 $stop) "
        else
            CPUS+=" $sequence "
        fi
    done
    CPUS=$(echo "${CPUS}" | sed -z 's/\n/ /g' | sed -e 's/\s\+/,/g' -e 's/^,//' -e 's/,$//')
else
    echo "HK_CPUS: $HK_CPUS"
    echo "WORKLOAD_CPUS: $WORKLOAD_CPUS"

    echo "Current script affinity:"
    taskset -c -p $$

    CPUS="${HK_CPUS}"
fi

echo "STRESS_NG_TILES_PER_CPU=${STRESS_NG_TILES_PER_CPU}"
echo "CPUS: ${CPUS}"

NUM_CPUS=$(echo "${CPUS}" | sed -e "s/,/ /g" | wc -w)
echo "NUM_CPUS=${NUM_CPUS}"
TEST_TILES=$(( ${NUM_CPUS} * ${STRESS_NG_TILES_PER_CPU} ))
echo "TEST_TILES: ${TEST_TILES}"

CMD="taskset -c ${CPUS}"
CMD+=" stress-ng"
CMD+=" --cpu ${TEST_TILES}"
CMD+=" --hdd ${TEST_TILES}"
CMD+=" --io ${TEST_TILES}"
CMD+=" --malloc ${TEST_TILES}"
CMD+=" --mmap ${TEST_TILES}"
CMD+=" --msg ${TEST_TILES}"
CMD+=" --stream ${TEST_TILES}"
CMD+=" --sysinfo ${TEST_TILES}"
CMD+=" --vm ${TEST_TILES}"
CMD+=" --timeout 0"
CMD+=" --metrics"
CMD+=" --times"
CMD+=" --verbose"

echo "About to run: ${CMD}"
${CMD} > stress-ng.out 2>&1 &
pid=$!
echo "stress-ng PID is ${pid}"
echo ${pid} > stress-ng.pid
