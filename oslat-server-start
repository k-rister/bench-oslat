#!/bin/bash

exec >oslat-server-start.txt
exec 2>&1

. /usr/bin/oslat-base || (echo "/usr/bin/oslat-base not found"; exit 1)

if [ -z "$HK_CPUS" ]; then
    TMP_CPUS=$(grep Cpus_allowed_list /proc/self/status | awk '{ print $2 }')
    echo "CPUs Allowed List: ${TMP_CPUS}"
    CPUS=""
    for sequence in $(echo ${TMP_CPUS} | sed -e 's/,/ /g'); do
        if echo $sequence | grep -q '-'; then
            start=$(echo $sequence | awk -F- '{ print $1 }')
            stop=$(echo $sequence | awk -F- '{ print $2 }')
            CPUS+=" $(seq $start 1 $stop) "
        else
            CPUS+=" $sequence "
        fi
    done
    CPUS=$(echo "${CPUS}" | sed -z 's/\n/ /g' | sed -e 's/\s\+/,/g' -e 's/^,//' -e 's/,$//')
else
    echo "HK_CPUS: $HK_CPUS"
    echo "WORKLOAD_CPUS: $WORKLOAD_CPUS"

    echo "Current script affinity:"
    taskset -c -p $$

    CPUS="${HK_CPUS}"
fi

echo "CPUS: ${CPUS}"

NUM_CPUS=$(echo "${CPUS}" | sed -e "s/,/ /g" | wc -w)
echo "NUM_CPUS=${NUM_CPUS}"

NUM_TESTS=9
TEST_COPIES=1
if [ ${NUM_CPUS} -gt ${NUM_TESTS} ]; then
    while [ $(( NUM_TESTS*TEST_COPIES )) -lt ${NUM_CPUS} ]; do
        (( TEST_COPIES += 1 ))
    done
fi

echo "TEST_COPIES: ${TEST_COPIES}"

CMD="taskset -c ${CPUS} \
     	         stress-ng \
		 --cpu ${TEST_COPIES} \
		 --hdd ${TEST_COPIES} \
        	 --io ${TEST_COPIES} \
		 --malloc ${TEST_COPIES} \
		 --mmap ${TEST_COPIES} \
		 --msg ${TEST_COPIES} \
		 --stream ${TEST_COPIES} \
		 --sysinfo ${TEST_COPIES} \
		 --vm ${TEST_COPIES} \
		 --timeout 0 \
		 --metrics \
		 --times \
		 --verbose"
echo "About to run: ${CMD}"
${CMD} > stress-ng.out 2>&1 &
pid=$!
echo "stress-ng PID is ${pid}"
echo ${pid} > stress-ng.pid
